version: "3.8"
services:
  # Nginx servers
  nginx-backend:
    image: nginx
    container_name: autofix-nginx-backend-container
    restart: always
    ports:
      - 80:80
    volumes:
      - ./backend.conf:/etc/nginx/nginx.conf
    networks:
      - autofix-backend-network
    depends_on:
      - spring1
      - spring2
      - spring3      
  nginx-frontend:
    image: nginx
    container_name: autofix-nginx-frontend-container
    restart: always
    ports:
      - 8070:8070
    volumes:
      - ./frontend.conf:/etc/nginx/nginx.conf
    networks:
      - autofix-frontend-network
      - autofix-backend-network
    depends_on:      
      - react1
      - react2
      - react3
  mysql:
    container_name: autofix-mysql-container
    image: mysql
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - autofix-mysql-volume:/var/lib/mysql
    networks:
      - autofix-backend-network
    environment:      
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - 3307:3306      
  spring1:
    container_name: autofix-backend-container-1
    image: josellancamil/backend-image
    ports:
      - 8091:8090
    environment:
      DB_HOST: autofix-mysql-container
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: admin
    networks:
      - autofix-backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - mysql
  spring2:
    container_name: autofix-backend-container-2
    image: josellancamil/backend-image
    ports:
      - 8092:8090
    environment:
      DB_HOST: autofix-mysql-container
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: admin
    networks:
      - autofix-backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - mysql
  spring3:
    container_name: autofix-backend-container-3
    image: josellancamil/backend-image
    ports:
      - 8093:8090
    environment:
      DB_HOST: autofix-mysql-container
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: admin
    networks:
      - autofix-backend-network
    deploy:
      restart_policy:
        condition: on-failure
  react1:
    container_name: autofix-frontend-container-1
    image: josellancamil/frontend-image
    ports:
      - 3001:3000
    networks:
      - autofix-frontend-network
    deploy:
      restart_policy:
        condition: on-failure
  react2:
    container_name: autofix-frontend-container-2
    image: josellancamil/frontend-image
    ports:
      - 3002:3000
    networks:
      - autofix-frontend-network
    deploy:
      restart_policy:
        condition: on-failure
  react3:
    container_name: autofix-frontend-container-3
    image: josellancamil/frontend-image
    networks:
      - autofix-frontend-network
    ports:
      - 3003:3000
    deploy:
      restart_policy:
        condition: on-failure
volumes:
  autofix-mysql-volume:
networks:
  autofix-frontend-network:
  autofix-backend-network: